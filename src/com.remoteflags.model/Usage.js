/**
 * Remote Flags API
 * Remote Flags openapi definition. Public readonly API for integration with Remote Flags.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@remoteflags.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UsageRequestInner from './UsageRequestInner';

/**
 * The Usage model module.
 * @module com.remoteflags.model/Usage
 * @version 1.0.8
 */
class Usage {
    /**
     * Constructs a new <code>Usage</code>.
     * @alias module:com.remoteflags.model/Usage
     * @param request {Array.<module:com.remoteflags.model/UsageRequestInner>} Array of requests
     */
    constructor(request) { 
        
        Usage.initialize(this, request);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, request) { 
        obj['request'] = request;
    }

    /**
     * Constructs a <code>Usage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.remoteflags.model/Usage} obj Optional instance to populate.
     * @return {module:com.remoteflags.model/Usage} The populated <code>Usage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Usage();

            if (data.hasOwnProperty('request')) {
                obj['request'] = ApiClient.convertToType(data['request'], [UsageRequestInner]);
            }
        }
        return obj;
    }


}

/**
 * Array of requests
 * @member {Array.<module:com.remoteflags.model/UsageRequestInner>} request
 */
Usage.prototype['request'] = undefined;






export default Usage;

